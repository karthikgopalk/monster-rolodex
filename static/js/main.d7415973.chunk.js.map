{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","bind","fetch","then","response","json","users","this","filteredValue","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iVAGaA,EAAO,SAAAC,GAAK,OACzB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHTC,EAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OACnB,qBAAKR,UAAU,YAAf,SAEOQ,GACAA,EAASC,KAAI,SAAAN,GAAO,OAChB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCPtBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBACAZ,UAAU,SACVa,KAAK,SACJF,YAAaA,EACdG,SAAUF,MCiCCG,E,kDAlCb,aAAc,IAAD,8BACX,gBAYFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SAZtC,EAAKC,MAAQ,CACXb,SAAS,GACTU,YAAY,IAEd,EAAKN,aAAe,EAAKA,aAAaU,KAAlB,gBANT,E,qDAQb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACT,SAASmB,S,oBAKzC,WAAS,IAAD,EACyBC,KAAKP,MAA7Bb,EADD,EACCA,SAASU,EADV,EACUA,YACVW,EAAgBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC3CA,EAAQE,KAAK0B,cAAcC,SAASd,EAAYa,kBAClD,OACE,sBAAK/B,UAAU,MAAf,UACE,oBAAII,GAAG,WAAP,8BACD,cAAC,EAAD,CACKO,YAAY,iBACZC,aAAcgB,KAAKhB,eACvB,cAAC,EAAD,CAAUJ,SAAUqB,W,GA3BVI,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d7415973.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n<div className='card-container'>\r\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n    <h1>{props.monster.name}</h1>\r\n    <p>{props.monster.email}</p>\r\n</div>\r\n);","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = ({monsters}) => (\r\n     <div className='card-list'>\r\n         {\r\n            monsters&&\r\n            monsters.map(monster => (\r\n                <Card key={monster.id} monster={monster}/>\r\n            ))\r\n         }\r\n\r\n    </div>\r\n);","import React from 'react'\r\nimport './search-box.styles.css'\r\nexport const SearchBox = ({placeholder,handleChange}) => (\r\n    <input \r\n    className='search'\r\n    type='search'\r\n     placeholder={placeholder} \r\n    onChange={handleChange}/>\r\n);\r\n","import './App.css';\nimport React from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters:[ ],\n      searchField:''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response =>response.json())\n    .then(users => this.setState({monsters:users}));\n  }\n  handleChange = (e) => {\n    this.setState({searchField : e.target.value})\n  }\n  render(){\n    const {monsters,searchField} = this.state;\n    const filteredValue = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return(\n      <div className=\"App\">\n        <h1 id=\"apptitle\">Monsters Rolodex</h1>\n       <SearchBox\n            placeholder='Change Monster' \n            handleChange={this.handleChange}/>\n        <CardList monsters={filteredValue}/> \n           </div>\n    )\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}